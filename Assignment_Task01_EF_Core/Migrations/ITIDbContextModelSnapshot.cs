// <auto-generated />
using System;
using Assignment_Task01_EF_Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using task01_EF_Core.Context;

#nullable disable

namespace task01_EF_Core.Migrations
{
    [DbContext(typeof(ITIDbContext))]
    partial class ITIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("task01_EF_Core.Models.Course", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<TimeSpan>("Duration")
                    .HasColumnType("time");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("TopicId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("courses");
            });

            modelBuilder.Entity("task01_EF_Core.Models.Course_Inst", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("CourseId")
                    .HasColumnType("int");

                b.Property<string>("Evaluate")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("InstructorId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("course_Insts");
            });

            modelBuilder.Entity("task01_EF_Core.Models.Department", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("HireDate")
                    .HasColumnType("datetime2");

                b.Property<int>("InstructorId")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("departments");
            });

            modelBuilder.Entity("task01_EF_Core.Models.Instructor", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Address")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Bonus")
                    .HasColumnType("int");

                b.Property<int>("DepartmentId")
                    .HasColumnType("int");

                b.Property<double>("HourlyRate")
                    .HasColumnType("float");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<double>("Salary")
                    .HasColumnType("float");

                b.HasKey("Id");

                b.ToTable("instructors");
            });

            modelBuilder.Entity("task01_EF_Core.Models.Stud_Course", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("CourseId")
                    .HasColumnType("int");

                b.Property<string>("Grade")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("StudentId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("stud_courses");
            });

            modelBuilder.Entity("task01_EF_Core.Models.Student", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Address")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Age")
                    .HasColumnType("int");

                b.Property<int>("DepartmentId")
                    .HasColumnType("int");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("students");
            });

            modelBuilder.Entity("task01_EF_Core.Models.Topic", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("topic");
            });
#pragma warning restore 612, 618
        }
    }
}
